@page "/"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using SBAPro.Core.Entities
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Dashboard - SBA Pro</PageTitle>

<AuthorizeView>
    <Authorized>
        <h1>Welcome to SBA Pro</h1>
        <p>Systematiskt Brandskyddsarbete - Professional Fire Safety Management System</p>

        @if (currentUser != null)
        {
            <div class="alert alert-info">
                <strong>Logged in as:</strong> @currentUser.Email<br/>
                <strong>Tenant:</strong> @(currentUser.TenantId.HasValue ? tenantName : "System Administrator")
            </div>

            <div class="row mt-4">
                <AuthorizeView Roles="SystemAdmin" Context="adminContext">
                    <Authorized>
                        <div class="col-md-4">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">System Administration</h5>
                                    <p class="card-text">Manage tenants and system configuration</p>
                                    <a href="/Admin/Tenants" class="btn btn-primary">Manage Tenants</a>
                                </div>
                            </div>
                        </div>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="TenantAdmin" Context="tenantContext">
                    <Authorized>
                        <div class="col-md-4">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">Site Management</h5>
                                    <p class="card-text">Manage your sites and floor plans</p>
                                    <a href="/Tenant/Sites" class="btn btn-primary">Manage Sites</a>
                                </div>
                            </div>
                        </div>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Inspector,TenantAdmin" Context="inspectorContext">
                    <Authorized>
                        <div class="col-md-4">
                            <div class="card">
                                <div class="card-body">
                                    <h5 class="card-title">Inspections</h5>
                                    <p class="card-text">Perform and view inspection rounds</p>
                                    <a href="/Inspector/Rounds" class="btn btn-primary">View Inspections</a>
                                </div>
                            </div>
                        </div>
                    </Authorized>
                </AuthorizeView>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <h1>Welcome to SBA Pro</h1>
        <p>Systematiskt Brandskyddsarbete - Professional Fire Safety Management System</p>
        <p>Please <a href="/Account/Login">login</a> to continue.</p>
        
        <div class="card mt-4">
            <div class="card-body">
                <h5 class="card-title">About SBA Pro</h5>
                <p class="card-text">
                    SBA Pro is a comprehensive, cloud-based SaaS system for managing Systematic Fire Protection Work (SBA).
                    It helps property owners and operators comply with Swedish legislation (LSO 2003:778).
                </p>
                <ul>
                    <li>Multi-tenant architecture for secure data isolation</li>
                    <li>Interactive floor plan visualization with Leaflet.js</li>
                    <li>Automated inspection reporting and reminders</li>
                    <li>Professional PDF reports with QuestPDF</li>
                    <li>Offline-capable for inspections in areas with poor connectivity</li>
                </ul>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private ApplicationUser? currentUser;
    private string? tenantName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            currentUser = await UserManager.GetUserAsync(user);
            if (currentUser?.TenantId.HasValue == true)
            {
                tenantName = currentUser.Tenant?.Name ?? "Unknown";
            }
        }
    }
}
